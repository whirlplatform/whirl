stages:
  - validate
  - build
  - docker

default:
  image:
    name: maven:3-jdk-8-slim
    pull_policy: if-not-present
  cache:
    paths:
      - .m2/repository/
    when: always
  artifacts:
    expire_in: 36 hours
  tags:
    - whirl
  timeout: 3h

variables:
  MAVEN_OPTS: '-Dmaven.repo.local=.m2/repository'

checkstyle:
  stage: validate
  rules:
    # Run on merge requests to develop branch
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'develop'
      when: always
  allow_failure: true
  script:
    - mvn $MAVEN_OPTS checkstyle:checkstyle-aggregate checkstyle:check
  artifacts:
    paths:
      - target/site/*
    when: on_failure
    expire_in: 36 hours

# Build everywhere.
.build:
  stage: build
  script:
    - apt-get update
    - apt-get install -y libfreetype6 libfontconfig1 nodejs
    - mvn $MAVEN_OPTS package -DskipTests=true -Dmaven.javadoc.skip=true -B -V

build:
  extends:
    - .build
  rules:
    # Run not on develop and master branches
    - if: $CI_COMMIT_REF_NAME != 'develop' && $CI_COMMIT_REF_NAME != 'master'
      when: always

build-with-artifacts:
  extends:
    - .build
  rules:
    # Run on develop and master branches
    - if: $CI_COMMIT_REF_NAME == 'develop' || $CI_COMMIT_REF_NAME == 'master'
      when: always
  artifacts:
    paths:
      - "**/*.war"
    when: on_success
    expire_in: 36 hours

# Creating and pushing docker image.
.docker:
  stage: docker
  needs:
    - build-with-artifacts
  dependencies:
    - build-with-artifacts
  image:
    name: docker:20.10.21
    pull_policy: if-not-present
  variables:
    IMAGE_NAME: "whirl"
    IMAGE_TAG: "${CI_COMMIT_TAG}"
  script:
    - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} docker.io
    - docker build -t otlichnosti/whirl:${IMAGE_TAG}-app --target app -f docker/Packaged.Dockerfile .
    - docker build -t otlichnosti/whirl:${IMAGE_TAG}-editor --target editor -f docker/Packaged.Dockerfile .
    - docker build -t otlichnosti/whirl:${IMAGE_TAG} --target all -f docker/Packaged.Dockerfile .
    - docker push otlichnosti/whirl:${IMAGE_TAG}-app
    - docker push otlichnosti/whirl:${IMAGE_TAG}-editor
    - docker push otlichnosti/whirl:${IMAGE_TAG}

docker-develop:
  extends:
    - .docker
  variables:
    IMAGE_TAG: "develop"
  rules:
    # Run on develop branch not on merge requests.
    - if: $CI_COMMIT_BRANCH == 'develop'
      when: always

docker-release:
  extends:
    - .docker
  variables:
    IMAGE_TAG: "${CI_COMMIT_TAG}"
  rules:
    # Run on tag.
    - if: $CI_COMMIT_TAG
      when: always

docker-release-latest:
  extends:
    - .docker
  variables:
    IMAGE_TAG: "latest"
  rules:
    # Run on tag.
    - if: $CI_COMMIT_TAG
      when: always