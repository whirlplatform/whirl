<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.whirlplatform</groupId>
        <artifactId>whirl</artifactId>
        <version>${revision}${sha1}${changelist}</version>
    </parent>
    <artifactId>whirl-theme</artifactId>

    <properties>
        <project.rootdir>${project.basedir}/..</project.rootdir>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <phantomjs.version>1.9.8</phantomjs.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.sencha.gxt</groupId>
            <artifactId>gxt-themebuilder</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Disable maven-compiler-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- Disable maven-resources-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- Disable maven-surefire-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- Disable maven-failsafe-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- JAR plugin. Create jar from generated-classes folder. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classesDirectory>${project.build.directory}/generated-classes</classesDirectory>
                </configuration>
            </plugin>
            <!-- First, download the PhantomJS bin that can run locally. See the profiles section for how the right version
            is selected. If a local version is used in>stead, this isn't necessary, but each computer that runs this maven
            script will need a copy of phantom to correctly generate the theme. -->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>maven-download-plugin</artifactId>
                <version>1.1.0</version>
                <executions>
                    <execution>
                        <id>download-phantomjs</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>
                                https://repo1.maven.org/maven2/com/github/klieber/phantomjs/${phantomjs.version}/phantomjs-${phantomjs.version}-${platform}${archive}
                            </url>
                            <outputDirectory>${project.build.directory}/phantomjs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <unpack>true</unpack>
                </configuration>
            </plugin>
            <!-- Run the themer with the PhantomJS bin downloaded above. Generate classes into target/class. This is done in
             the prepare-package phase, so that it is ready when a jar is created -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <id>generate-theme-triton</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java
                            </executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>
                                    -DphantomBin=${project.build.directory}/phantomjs/phantomjs-${phantomjs.version}-${platform}/${phantomjs.bin.path}phantomjs${phantomjs.bin.exec}
                                </argument>
                                <argument>com.sencha.gxt.themebuilder.ThemeBuilder</argument>
                                <!-- Build all generated sources into the classes directory, so they end up in the final jar -->
                                <argument>-gen</argument>
                                <argument>${project.build.directory}/generated-classes</argument>
                                <!-- These next several arguments are optional, and are here to make it easier to debug issues in the theme -->
                                <argument>-imageFile</argument>
                                <argument>${project.build.directory}/triton-snapshot.png</argument>
                                <argument>-manifestFile</argument>
                                <argument>${project.build.directory}/triton-snapshot.json</argument>
                                <argument>-sourcesOnly</argument>
                                <argument>true</argument>
                                <!-- List theme config files here -->
                                <argument>${project.basedir}/src/theme/triton.theme</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-theme-neptune</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java
                            </executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>
                                    -DphantomBin=${project.build.directory}/phantomjs/phantomjs-${phantomjs.version}-${platform}/${phantomjs.bin.path}phantomjs${phantomjs.bin.exec}
                                </argument>
                                <argument>com.sencha.gxt.themebuilder.ThemeBuilder</argument>
                                <!-- Build all generated sources into the classes directory, so they end up in the final jar -->
                                <argument>-gen</argument>
                                <argument>${project.build.directory}/generated-classes</argument>
                                <!-- These next several arguments are optional, and are here to make it easier to debug issues in the theme -->
                                <argument>-imageFile</argument>
                                <argument>${project.build.directory}/neptune-snapshot.png</argument>
                                <argument>-manifestFile</argument>
                                <argument>${project.build.directory}/neptune-snapshot.json</argument>
                                <argument>-sourcesOnly</argument>
                                <argument>true</argument>
                                <!-- List theme config files here -->
                                <argument>${project.basedir}/src/theme/neptune.theme</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- These profiles let us pick which version of PhantomJS to download and provide to the themer. This isn't
     required if phantom is on the path already, or if each machine where this build will be run has some way of
     specifying the phantomJS build to be used. -->
    <profiles>
        <profile>
            <id>win32</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>windows</platform>
                <archive>.zip</archive>
                <phantomjs.bin.path/>
                <phantomjs.bin.exec>.exe</phantomjs.bin.exec>
            </properties>
        </profile>

        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <platform>macosx</platform>
                <archive>.zip</archive>
                <phantomjs.bin.path>bin/</phantomjs.bin.path>
                <phantomjs.bin.exec/>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>linux</name>
                </os>
            </activation>
            <properties>
                <platform>linux-i686</platform>
                <archive>.tar.bz2</archive>
                <phantomjs.bin.path>bin/</phantomjs.bin.path>
                <phantomjs.bin.exec/>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>maven-download-plugin</artifactId>
                        <configuration>
                            <unpack>false</unpack>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-linux</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <failOnError>true</failOnError>
                                    <tasks>
                                        <bunzip2
                                                src="${basedir}/target/phantomjs/phantomjs-${phantomjs.version}-${platform}${archive}"/>
                                        <untar src="${basedir}/target/phantomjs/phantomjs-${phantomjs.version}-${platform}.tar"
                                               dest="${basedir}/target/phantomjs/"/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>lin64</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>amd64</arch>
                    <name>linux</name>
                </os>
            </activation>
            <properties>
                <platform>linux-x86_64</platform>
                <archive>.tar.bz2</archive>
                <phantomjs.bin.path>bin/</phantomjs.bin.path>
                <phantomjs.bin.exec/>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>maven-download-plugin</artifactId>
                        <configuration>
                            <unpack>false</unpack>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-linux</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <failOnError>true</failOnError>
                                    <tasks>
                                        <bunzip2
                                                src="${basedir}/target/phantomjs/phantomjs-${phantomjs.version}-${platform}${archive}"/>
                                        <untar src="${basedir}/target/phantomjs/phantomjs-${phantomjs.version}-${platform}.tar"
                                               dest="${basedir}/target/phantomjs/"/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
